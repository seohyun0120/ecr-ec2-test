name: Docker Build, Upload to ECR
run-name: ${{ github.actor }} ðŸš€

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: 448066611421.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: seohyun-test

  jobs:
    build_and_deploy:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
  
    deploy:
      needs: build_and_deploy
      runs-on: ubuntu-latest
  
      steps:
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ env.AWS_REGION }}

      - name: Stop and Remove Existing Container
        run: |
          docker stop $(docker ps -q) || true
          docker rm $(docker ps -aq) || true
  
      - name: Pull and run Docker image on EC2
        id: deploy-to-ec2
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker run -d -v /etc/localtime:/etc/localtime:ro -e TZ=Asia/Seoul -p 3000:3000 $ECR_REGISTRY/$ECR_REPOSITORY:latest
  